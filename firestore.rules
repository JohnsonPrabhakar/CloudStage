
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check for admin role by looking for a document
    // with the user's UID in the 'admins' collection.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // --- Admin-specific rules ---
    // Admins can manage their own admin status records.
    match /admins/{adminId} {
      allow read, write: if request.auth.uid == adminId;
    }

    // --- Public & User Rules ---
    // Events are public to read.
    // Creation/modification is restricted.
    match /events/{eventId} {
      allow read;
      allow create: if request.auth.uid == request.resource.data.artistId;
      allow update, delete: if request.auth.uid == resource.data.artistId || isAdmin();
    }

    // Artist profiles are public to read.
    // Creation/modification is restricted.
    match /artists/{artistId} {
      allow read;
      allow create: if request.auth != null; // Any authenticated user can start registration
      allow update: if request.auth.uid == artistId;
      allow delete: if isAdmin(); // Only admins can delete artists
    }

    // Movies are public to read.
    // Only admins can create, update, or delete them.
    match /movies/{movieId} {
      allow read;
      allow create, update, delete: if isAdmin();
    }

    // Tickets can be created by the user they belong to.
    // They can only be read by the owner or an admin.
    match /tickets/{ticketId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
    }

    // Site configuration (like online/offline status) is public to read.
    // Only admins can change it.
    match /config/{docId} {
      allow read;
      allow write: if isAdmin();
    }
  }
}

    