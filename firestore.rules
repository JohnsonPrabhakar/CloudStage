
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/admins/$(userId));
    }

    // --- Events ---
    match /events/{eventId} {
      // Anyone can read approved events, artists can read their own, and admins can read any
      allow read: if resource.data.moderationStatus == 'approved' || (request.auth != null && resource.data.artistId == request.auth.uid) || (request.auth != null && isAdmin(request.auth.uid));
      // Only authenticated artists can create events. The document must match their UID.
      allow create: if request.auth != null && request.resource.data.artistId == request.auth.uid;
      // Only the artist who created the event or an admin can update it
      allow update: if (request.auth != null && resource.data.artistId == request.auth.uid) || (request.auth != null && isAdmin(request.auth.uid));
      // Only admins can delete events
      allow delete: if request.auth != null && isAdmin(request.auth.uid);
    }

    // --- Artists ---
    match /artists/{artistId} {
      // Anyone can read an artist's profile
      allow read: if true;
      // Anyone can create their own artist profile (for registration)
      allow create: if request.auth != null && request.auth.uid == artistId;
      // An artist can only update their own profile, or an admin can update any profile
      allow update: if (request.auth != null && request.auth.uid == artistId) || (request.auth != null && isAdmin(request.auth.uid));
      // Only admins can delete artist profiles
      allow delete: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // --- Movies ---
    match /movies/{movieId} {
      // Anyone can read movie data
      allow read: if true;
      // Only admins can create, update, or delete movies
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // --- Tickets ---
    match /tickets/{ticketId} {
        // A user can create their own ticket
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        // A user can read their own tickets, and an admin can read any ticket
        allow read: if (request.auth != null && resource.data.userId == request.auth.uid) || (request.auth != null && isAdmin(request.auth.uid));
        // No one can update or delete tickets
        allow update, delete: if false;
    }
    
    // --- Config ---
    match /config/{docId} {
        // Anyone can read config
        allow read: if true;
        // Only admins can write to config
        allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // --- Admins ---
    match /admins/{adminId} {
        // Only admins can read the admins list
        allow read: if request.auth != null && isAdmin(request.auth.uid);
        // Only admins can add other admins (or a service account)
        allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
  }
}
