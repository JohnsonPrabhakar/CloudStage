rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Anyone can read approved events.
    // An authenticated artist can read their own events (any status).
    match /events/{eventId} {
      allow read: if resource.data.moderationStatus == 'approved' 
                    || (request.auth != null && request.auth.uid == resource.data.artistId);
      // Only authenticated users (artists) can create events.
      // Admin will update status (moderation)
      allow create: if request.auth.uid != null;
      allow update: if request.auth.uid != null; // For boosting and admin moderation
    }

    // Anyone can read artist profiles.
    // An artist can create/update their own profile.
    match /artists/{artistId} {
      allow read: if true;
      allow create, update, delete: if request.auth.uid == artistId;
    }
    
    // Logged-in users can create tickets.
    // Users can read their own tickets.
    match /tickets/{ticketId} {
      allow create: if request.auth.uid != null;
      allow read: if request.auth.uid == resource.data.userId;
    }
    
    // Anyone can read movies
    match /movies/{movieId} {
      allow read: if true;
      // Admin operations handled client-side, so just check for auth
      allow create, update, delete: if request.auth.uid != null;
    }
    
    // Anyone can read config. Admin can write.
    match /config/{configId} {
      allow read: if true;
      allow write: if request.auth.uid != null;
    }
  }
}
