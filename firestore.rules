rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an authenticated admin.
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'admin@cloudstage.in';
    }

    // Helper function to check if a user is the owner of a document.
    function isOwner(resourceId) {
      return request.auth != null && request.auth.uid == resourceId;
    }

    // Default deny all reads/writes.
    match /{document=**} {
      allow read, write: if false;
    }

    // CONFIGURATION: Only admin can read/write site configuration.
    match /config/{docId} {
      allow read, write: if isAdmin();
    }

    // ARTISTS:
    // - Anyone can read an approved artist's profile.
    // - An artist can create their own profile (on registration).
    // - An artist can update their own profile.
    // - Admin can read/write any artist profile for moderation.
    match /artists/{artistId} {
      allow read: if resource.data.isApproved == true || isAdmin();
      allow create: if isOwner(artistId);
      allow update: if isOwner(artistId) || isAdmin();
      allow delete: if isAdmin();
    }

    // EVENTS:
    // - Anyone can read an approved event.
    // - The owner artist or an admin can read any of their events (pending, rejected, etc.).
    // - The owner artist can create an event.
    // - The owner artist or admin can update an event.
    // - Admin can delete events.
    match /events/{eventId} {
       allow read: if resource.data.moderationStatus == 'approved' || isOwner(resource.data.artistId) || isAdmin();
       allow create: if isOwner(request.resource.data.artistId);
       allow update: if isOwner(resource.data.artistId) || isAdmin();
       allow delete: if isAdmin();
    }

    // TICKETS:
    // - A user can create their own ticket.
    // - A user can read their own tickets.
    match /tickets/{ticketId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read: if isOwner(resource.data.userId);
      allow write: if false; // No updates/deletes for now
    }
    
    // MOVIES:
    // - Anyone can read any movie.
    // - Only admin can create, update, or delete movies.
    match /movies/{movieId} {
        allow read: if true;
        allow write: if isAdmin();
    }
  }
}
