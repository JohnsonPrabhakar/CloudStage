
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'admin@cloudstage.in';
    }

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Rules for Artists
    match /artists/{artistId} {
      // Anyone can view an artist's profile if it's approved. Admin can view any profile.
      allow read: if resource.data.isApproved == true || isAdmin();
      // A user can create their own artist profile during registration.
      allow create: if request.auth.uid == artistId;
      // An artist can update their own profile. Admin can update any profile.
      allow update: if request.auth.uid == artistId || isAdmin();
      // Only admin can delete artist profiles (e.g., for rejection).
      allow delete: if isAdmin();
    }

    // Rules for Events
    match /events/{eventId} {
      // Anyone can view an event if it is approved.
      // An artist can view their own events, regardless of status.
      // Admin can view any event.
      allow read: if resource.data.moderationStatus == 'approved' || (isAuthenticated() && resource.data.artistId == request.auth.uid) || isAdmin();
      
      // An authenticated artist can create an event for themselves.
      allow create: if isAuthenticated() && request.resource.data.artistId == request.auth.uid;
      
      // An artist can update their own event. Admin can update any event.
      allow update: if (isAuthenticated() && get(/databases/$(database)/documents/events/$(eventId)).data.artistId == request.auth.uid) || isAdmin();
      
      // No one can delete events directly to preserve history.
      allow delete: if false;
    }

    // Rules for Movies
    match /movies/{movieId} {
        // Anyone can read/watch a movie.
        allow read: if true;
        // Only admin can add, update, or delete movies.
        allow write: if isAdmin();
    }

    // Rules for Tickets
    match /tickets/{ticketId} {
        // A user can read their own tickets. Admin can read any ticket.
        allow read: if isAuthenticated() && (request.auth.uid == resource.data.userId || isAdmin());
        // An authenticated user can create a ticket for themselves.
        allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
        // Only admin can update or delete tickets.
        allow update, delete: if isAdmin();
    }
    
    // Rules for Site Configuration
    match /config/{docId} {
      // Anyone can read the site configuration (e.g., site online/offline status).
      allow read: if true;
      // Only admin can change the site configuration.
      allow write: if isAdmin();
    }
  }
}
