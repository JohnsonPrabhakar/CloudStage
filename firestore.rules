rules_version = '2';

service cloud.firestore {
  match /databases/cloudstage/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      // In a production app, use custom claims. For this project, email is sufficient.
      return request.auth.token.email == 'admin@cloudstage.in';
    }

    // Default deny all access to prevent unauthorized reads/writes.
    match /{document=**} {
      allow read, write: if false;
    }

    // --- COLLECTIONS ---

    // ARTISTS
    match /artists/{artistId} {
      // Anyone can read an artist's public profile.
      allow read: if true;
      // An authenticated user can create their own artist profile.
      allow create: if isOwner(artistId);
      // An artist can update their own profile. An admin can update any profile.
      allow update: if isOwner(artistId) || isAdmin();
      // Admins can delete artist profiles.
      allow delete: if isAdmin();
    }

    // EVENTS
    match /events/{eventId} {
      // Admins can read any event.
      // Logged-in artists can read their own events.
      // The public can read approved events.
      allow read: if isAdmin() ||
                   (request.auth != null && request.auth.uid == resource.data.artistId) ||
                   (resource.data.moderationStatus == 'approved');

      // Admins can write to any event.
      // An authenticated artist can create or update their own event.
      allow write: if isAdmin() || (request.auth != null && request.auth.uid == request.resource.data.artistId);
    }
    
    // TICKETS
    match /tickets/{ticketId} {
      // Admins can read any ticket.
      // A user can read their own tickets.
      allow read: if isAdmin() || (request.auth != null && request.auth.uid == resource.data.userId);
      // An authenticated user can create a ticket for themselves.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // No one can update or delete tickets.
      allow update, delete: if false;
    }

    // MOVIES
    match /movies/{movieId} {
      // Anyone can read movie details.
      allow read: if true;
      // Only an admin can create, update or delete movies.
      allow write: if isAdmin();
    }

    // CONFIG
    match /config/{configId} {
      // Anyone can read config settings.
      allow read: if true;
      // Only an admin can write config settings.
      allow write: if isAdmin();
    }
  }
}
