
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      // Check if the user is authenticated and has the admin email.
      return request.auth != null && request.auth.token.email == 'admin@cloudstage.in';
    }

    // Artists collection
    match /artists/{artistId} {
      // Any user can view an artist's profile.
      allow get: if true;
      // Only admins can list all artists (for pending approvals and counts).
      allow list: if isAdmin();
      // An artist can create their own profile.
      allow create: if request.auth.uid == artistId;
      // An artist can update their own profile, or an admin can update it.
      allow update: if (request.auth.uid == artistId) || isAdmin();
      // Only an admin can delete an artist profile.
      allow delete: if isAdmin();
    }

    // Events collection
    match /events/{eventId} {
      // An event can be read (get/list) if it's approved, OR if the reader is the admin, 
      // OR if the reader is the artist who owns it.
      allow read: if resource.data.moderationStatus == 'approved' 
                  || isAdmin() 
                  || (request.auth != null && request.auth.uid == resource.data.artistId);
      
      // An authenticated artist can create an event.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.artistId;
      // An artist can update their own event, or an admin can.
      allow update: if (request.auth != null && request.auth.uid == resource.data.artistId) || isAdmin();
      // Only an admin can delete an event.
      allow delete: if isAdmin();
    }

    // Movies collection
    match /movies/{movieId} {
      // Anyone can view or list movies.
      allow get, list: if true;
      // Only an admin can create, update, or delete movies.
      allow write: if isAdmin();
    }

    // Tickets collection
    match /tickets/{ticketId} {
      // A ticket can be read (get/list) if the reader is the admin OR if the reader is the user who owns it.
      allow read: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.userId);
      
      // An authenticated user can create a ticket for themselves.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // Tickets cannot be changed or deleted by users.
      allow update, delete: if false;
    }
    
    // Config collection for site status
    match /config/{docId} {
      // Anyone can read the site configuration.
      allow get: if true;
      // Only an admin can change the site configuration.
      allow write: if isAdmin();
    }
  }
}
